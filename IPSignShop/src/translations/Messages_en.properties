# You need to use '' (double quotes) instead of ' (single quote)
# Color codes are supported with the '&' sign
# Placeholder are indicated with {<number>}. You can switch the order and they are explained over their occurence
# You can specify some other information behind the number in the placeholders. Look here: https://docs.oracle.com/javase/8/docs/api/java/text/MessageFormat.html

# If it is not a number. 0 ==> the userinput
not\ a\ number= &4"{0}" &cis not a number!
# If a conversation was exited ungracefully (e.g. by entering "exit" or timing out)
conversation\ cancelled= &cThe conversation timed out or was cancelled by you!
# If a user has a prompt to answer but wants to open a new (e.g. selling items two times in a row, without finishing the first one)
already\ conversing= &cYou are already conversing!

# ==== Interaction with the shop ====
#   ==== Selling ====
# If the shops's stock is too small. 0 ==> Shop's stock , 1 ==> Amoun the shop would need
interact\ with\ shop\ selling\ not\ enough\ space\ in\ shop= &cThe shop has only &4{0} &citems left.
# If the player doesn't have enough items. 0 ==> The amount of items the player has, 1 ==> The items the player will need, 2 ==> The amount he wanted to sell
interact\ with\ shop\ selling\ not\ enough\ items= &cYou would need another &4{1} &citems to have &3{2}&c.
# If the shop owner doesn't have enough money to buy the items. 0 ==> The money of the shop owner, 1 ==> the money the shop owner would need, 2 ==> the name of the owner
interact\ with\ shop\ selling\ shop\ owner\ not\ enough\ money: &cThe shop owner (&8{2}&c) doesn''t have enough money to buy the items.
# The suffix to the "buy\ amount\ conversation\ prompt\ text". 0 ==> The amount of items they have in their inventory.
interact\ with\ shop\ selling\ items\ available\ suffix= &aYou have &3{0} &aavailable.
# If a user tries to buy/sell to their own shop
interact\ with\ shop\ is\ your\ shop= &cThis is your shop. Just take it out\!

#   ==== BUYING ====
# If the buyer doesn't have enough money. 0 ==> The money he needs, 1 ==> his current money, 2 ==> The amount needed to buy the items
interact\ with\ shop\ buying\ not\ enough\ money= &cYou will need another &4{0} &cmoney to buy this. {1} {2}
# If the buyer doesn't have enough space in his inventory. 0 ==> The space he has, 1 ==> The space he needs
interact\ with\ shop\ buying\ not\ enough\ space\ in\ inventory= &cYou don''t have enough space in your inventory (&4{0}&c/&3{1}&c)
# If the shop's stock is too low. 0 ==> The items that are missing, 1 ==> The stock of the shop, 2 ==> The amount of items the user wanted to buy
interact\ with\ shop\ buying\ shop\ not\ enough\ items= &cThe shop will need another &4{0} &citems. ({1}/{2})

#   ==== Shop info lines ====
# The shop info message. 0 ==> Shop owner, 1 ==> Shop item, 2 ==> Shop Stock, 3 ==> Price for one item, 4 ==> Shop mode
interact\ with\ shop\ line\ 1= &5+--------------------------------------------------
interact\ with\ shop\ line\ 2= &5; &aShop Information:
interact\ with\ shop\ line\ 3= &5; &aOwner: &3{0}
interact\ with\ shop\ line\ 4= &5; &aItem: &3{1}
interact\ with\ shop\ line\ 5= &5; &aStock &3{2}
interact\ with\ shop\ line\ 6= &5; &aPrice per &3{1} &a- &3{3,number,$0.##} 
interact\ with\ shop\ line\ 7= &5; &aThis shop is &3{4} &aitems.
interact\ with\ shop\ line\ 8= &5+--------------------------------------------------

#   ==== Shop Buy/Sell messages ====
# The shop info message. 0 ==> Shop owner, 1 ==> Shop item, 2 ==> Shop Stock, 3 ==> Price for one item, 4 ==> amount bought, 5 ==> total price
interact\ with\ shop\ successfully\ purchased\ line\ 1= &5+--------------------------------------------------
interact\ with\ shop\ successfully\ purchased\ line\ 2= &5; &aSuccessfully Purchased:
interact\ with\ shop\ successfully\ purchased\ line\ 3= &5; &3{4} {1} &afor &3{5,number,$0.##}&a.
interact\ with\ shop\ successfully\ purchased\ line\ 4= &5+--------------------------------------------------
# The sold messages. Same as above otherwise.
interact\ with\ shop\ successfully\ sold\ line\ 1= &5+--------------------------------------------------
interact\ with\ shop\ successfully\ sold\ line\ 2= &5; &aSuccessfully Sold:
interact\ with\ shop\ successfully\ sold\ line\ 3= &5; &3{4} {1} &afor &3{5,number,$0.##}&a.
interact\ with\ shop\ successfully\ sold\ line\ 4= &5+--------------------------------------------------

#   ==== Confirmation Conversation ====
# The confirmation message. 0 ==> The shop owner, 1 ==> The stock of the shop, 2 ==> The item name, 3 ==> The amount, 4 ==> The price for one item, 
# 5 ==> The total price, 6 ==> The action (sell|buy) already localized.
interact\ with\ shop\ confirmation\ message= &6Do you really want to &a{6} &3{3} {2} &6for &3{5,number,$0.##}&6?
# If the user responds with the "confirmation\ conversation\ no" value.
interact\ with\ shop\ cancelled\ trade= &cYou cancelled the trade.
# The thing you enter if you DO want to confirm it. Case insensitive.
confirmation\ conversation\ yes= Yes
# The thing you enter if you DON'T want to confirm it. Case insensitive. 
confirmation\ conversation\ no= No

# ==== Creation Listener ====
# If the chest is already a shop
creation\ listener\ shop\ already\ exists= &cThere is already a shop at this location!
# If the user wants to make a double chest a shop
creation\ listener\ is\ double\ chest= &cYou can''t create a shop with a double chest!
# If the chest is not empty but the user wants to make it a shop
creation\ listener\ chest\ not\ empty= &cThe chest ist not emtpy!
# If a block is above the chest or at the location of the shop sign
creation\ listener\ not\ enough\ space= &cThere is not enough space either above or in front of the chest!
# If the user tries to create a shop at the top or bottom of a chest
creation\ listener\ click\ on\ valid\ side= &cYou can''t create a shop at the top or bottom of the chest.
# If the user wants to create a shop but the chest was destroyed in the mean time
creation\ listener\ chest\ was\ destroyed= &cThe chest was destroyed!

# ==== Protect Shop contents ====
# If a user tries to store an item that is not the item the shop sells. 0 ==> The type of the item the user stored, 1 ==> The shop item name
shop\ inventory\ you\ can\ only\ store\ shop\ items= &cYou can only store the item &3{1} &cin this shop..
# If a user tries to move items in the shop inventory using the number keys (hotkeys)
shop\ inventory\ number\ keys\ disabled= &cDue to bugs the number keys (hotkeys) were disabled.

# ==== Conversations ====
#   ==== Buy / Sell Conversation ====
# The prompt text for the Buy/Sell conversation. 0 ==> ShopMode (the two down below), 1 ==> Suffix
buy\ amount\ conversation\ prompt\ text=&aEnter how many you wish to &3{0} &ain chat. {1}
buy\ amount\ conversation\ sell= Sell
buy\ amount\ conversation\ buy= Buy

#   ==== Trading price conversation ====
# The Prompt text for the Trading Price conversation (upon creating a shop). 0 ==> The itemname the shop should trade
trading\ price\ conversation\ prompt\ text= &aEnter how much you wish to trade one &6{0} &afor in chat.
# The shop mode the user wants. 0 ==> The itemname the shop trade, 1 ==> Localized sell, 2 ==> Localized buy (localization from buy\ amount\ conversation\ sell/buy)
trading\ price\ conversation\ prompt\ text\ shop\ mode= &2Do you want to &c{1} &2or &a{2} &3{0}&2?

# ==== Shop modes ====
# The names of the different shop modes
shop\ mode\ sell= Selling
shop\ mode\ sell\ unlimited= Selling (unlimited)
shop\ mode\ buy= Buying
shop\ mode\ buy\ unlimited= Buying (unlimited)

# ==== Shop ====
#   ==== Sign ====
# The text on the sign. 0 ==> Shop owner, 1 ==> Shop mode, 2 ==> Item name, 3 ==> Item price
sign\ line\ 1= &c[IPSignShop]
sign\ line\ 2= {1}
sign\ line\ 3= {2}
sign\ line\ 4= For {3,number,$0.##} each

#   ==== Item name ====
# The name floating above the item. 0 ==> item name, 1 ==> shop owner, 2 ==> price for one
shop\ item\ name= &3&l{0} &6- &3&l{2,number,$0.##}

# ==== Commands ====
#   ==== Manager ====
# If the console tries to execute a player command. 0 ==> The name of the command
must\ be\ player= &cYou must be a player to use &4{0}&c.
# If the user doesn't have the needed permission to perform a command. 0 ==> The name of the command
no\ permission= &cYou don''t have permission to use &4{0}&c.

#   ==== Universal ====
# If the user doesn't look at a block
no\ block\ in\ sight= &cThere is no block in sight.
# If the block is not a sign. 0 ==> The type of the block the user is looking at
block\ not\ a\ sign= &cThe block &4{0} &cis not a sign.
# If the sign doesn't belong to a chest. 0 ==> The type of the block the user looked at
not\ a\ shop= &cThe {0} is not a shop.
# Send if a user tries to transfer ownership for another players shop and doesn't have the permission. 0 ==> The Shop owner's name
no\ permission\ to\ alter\ other\ players\ shop= &cYou don''t have permission to alter &4{0}&c''s shop!
# Send if the user you wanted to transfer ownership too isn't a known account. 0 ==> The name the user entered
player\ not\ known= &cThis player isn''t known.

#   ==== Help ====
# You can use {0} to get the name of the command in the usage and description messages
CommandHelp\ name= Help
CommandHelp\ usage= &cUsage: /ipsignshop {0} 
CommandHelp\ description= &3&l{0}&8: &8Displays the help.
CommandHelp\ keyword= help
# The header above the help.
CommandHelp\ header= \n&8===========   &bIPSignShop Help&8  ==========

#   ==== Set Owner ====
# You can use {0} to get the name of the command in the usage and description messages and {1} to get the keyword
CommandSetOwner\ name= Set Owner
CommandSetOwner\ usage= &cUsage: /ipsignshop {1} <&6owner&c> 
CommandSetOwner\ description= &3&l{0}&8: &8Sets the owner.
CommandSetOwner\ keyword= setOwner

# Send to you if you successfully transfered ownership. 0 ==> The name of the person you transfered it to, 1 ==> The name of the previous owner
CommandSetOwner\ transferred\ ownership= &2Successfully transferred ownership from &c{1} &2to &a{0}&2.
# Send if you received ownership over a shop from another person. 0 ==> The name of the previous shop owner, 1 ==> The name of the player who iussed the transfer
CommandSetOwner\ received\ ownership= &2Received ownership from &8{1}&2 over &a{0}&2''s shop.

#   ==== Set Mode ====
# You can use {0} to get the name of the command in the usage and description messages and {1} to get the keyword
CommandSetMode\ name= Set Mode
CommandSetMode\ usage= &cUsage: /ipsignshop {1} <&6mode&c>
CommandSetMode\ description= &3&l{0}&8: Sets the mode of the shop.
CommandSetMode\ keyword= setMode

# If the mode was changed successfully. 0 ==> The Shop owner, 1 ==> The new mode, 2 ==> The old mode
CommandSetMode\ set\ shop\ mode= &2The mode was changed from &c{2} &2to &a{1}&2.
# The Different Shop modes, now in ONE WORD
CommandSetMode\ sell= sell
CommandSetMode\ sell\ unlimited= sellUnlimited
CommandSetMode\ buy= buy
CommandSetMode\ buy\ unlimted= buyUnlimited
# If the user tries to create an unlimited shop but doesn't have the permission.
CommandSetMode\ no\ permission\ for\ unlimted\ resources= &cYou don''t have permission to create an unlimited shop.

#    ==== Set Price ====
# You can use {0} to get the name of the command in the usage and description messages and {1} to get the keyword
CommandSetPrice\ name= Set price
CommandSetPrice\ usage= &cUsage: /ipsignshop {1} <&6price&c>
CommandSetPrice\ description= &3&l{0}&8: Sets the price of a shop.
CommandSetPrice\ keyword= setPrice
# If the price was set successfully. 0 ==> The Shop owner, 1 ==> The new price, 2 ==> The old price
CommandSetPrice\ set\ shop\ price= &2The price of &3{0}&2''s shop was changed from &c{2,number,$0.##} &2to &a{1,number,$0.##}&2.

#    ==== Clean ====
# You can use {0} to get the name of the command in the usage and description messages and {1} to get the keyword
CommandClean\ name= Clean
CommandClean\ usage= &cUsage: /ipsignshop {1}
CommandClean\ description= &3&l{0}&8: Deletes all shops without stock.
CommandClean\ keyword= clean
# If the shops were cleaned successfully. 0 ==> The amount of shops cleared
CommandClean\ removed\ shops= &2Deleted &3{0} &2shops without stock left. 

#    ==== Remove ====
# You can use {0} to get the name of the command in the usage and description messages and {1} to get the keyword
CommandRemove\ name= Remove
CommandRemove\ usage= &cUsage: /ipsignshop {1}
CommandRemove\ description= &3&l{0}&8: Removes a shop.
CommandRemove\ keyword= remove
# If the shop was successfully removed. 0 ==> The shop owner, 1 ==> The shops stock, 2 ==> The Shop's item
CommandRemove\ removed\ shop= &2Removed a shop from &c{0} &2selling &3{2}&2.

#    ==== Find ====
# You can use {0} to get the name of the command in the usage and description messages and {1} to get the keyword
CommandFind\ name= Find
CommandFind\ usage= &cUsage: /ipsignshop {1} <&6material&c>
CommandFind\ description= &3&l{0}&8: Finds a shop selling the given material.
CommandFind\ keyword= find
# If the material couln't be found. 0 ==> The thing the user entered
CommandFind\ material\ unknown= &cThe material &4{0} &cis unknown.
# If there is no shop selling the item. 0 ==> The material the user searched
CommandFind\ no\ shop\ found= &cI''m afraid, but I couldn''t find a shop selling &4{0}&c.
# If a shop was found. 0 ==> The name of the shop owner, 1 ==> The distance in blocks, 2 ==> The item he searched, 3 ==> The Stock of the shop, 4 ==> The price
CommandFind\ found\ shop= &2The nearest shop selling &3{2} &2is &a{1,number,integer} &2blocks in this direction and is owned by &3{0}&2 (&3{4,number,$0.##}&2).